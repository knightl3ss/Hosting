document.addEventListener('DOMContentLoaded', function() {
    // Add event listener for filter button click
    document.getElementById('filterBtn').addEventListener('click', function() {
        const officeFilter = document.getElementById('officeFilter').value;
        const remarksFilter = document.getElementById('remarksFilter').value;
        const serviceFilter = document.getElementById('serviceFilter').value;
        const statusFilter = document.getElementById('statusFilter').value;

        console.log('Filters:', {
            office: officeFilter,
            remarks: remarksFilter,
            service: serviceFilter,
            status: statusFilter
        });

        const filters = {
            office: officeFilter,
            remarks: remarksFilter,
            service: serviceFilter,
            status: statusFilter,
        };

        // Send the filters to the server to get the filtered data
        fetchFilteredData(filters);
    });
});

// Function to send the filters and fetch filtered data
function fetchFilteredData(filters) {
    fetch(filterUrl, {  // âœ… Uses the correct URL from Blade
        method: "POST",
        headers: {
            "Content-Type": "application/json",
            "X-CSRF-TOKEN": document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
        },
        body: JSON.stringify(filters),
    })
    .then(response => response.json())
    .then(data => {
        console.log('Filtered Data:', data); // Debugging log
        const tableBody = document.getElementById('employeeTable');
        tableBody.innerHTML = '';  // Clear current table rows

        if (data.personnels && data.personnels.length > 0) {
            // Populate the table with the filtered data
            data.personnels.forEach(personnel => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${personnel.office}</td>
                    <td>${personnel.itemNo}</td>
                    <td>${personnel.position}</td>
                    <td>${personnel.salaryGrade}</td>
                    <td>${personnel.authorizedSalary}</td>
                    <td>${personnel.actualSalary}</td>
                    <td>${personnel.step}</td>
                    <td>${personnel.code}</td>
                    <td>${personnel.type}</td>
                    <td>${personnel.level}</td>
                    <td>${personnel.lastName}</td>
                    <td>${personnel.firstName}</td>
                    <td>${personnel.middleName ?? ''}</td>
                    <td>${personnel.dob}</td>
                    <td>${personnel.originalAppointment}</td>
                    <td>${personnel.lastPromotion ?? 'N/A'}</td>
                    <td>${personnel.status}</td>
                `;
                tableBody.appendChild(row);
            });
        } else {
            const row = document.createElement('tr');
            row.innerHTML = `<td colspan="16" class="text-center">No personnel found.</td>`;
            tableBody.appendChild(row);
        }
    })
    .catch(error => {
        console.error('Error fetching filtered data:', error);
    });
}
